datasource db {
  provider = "postgresql" // или "mysql" / "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int          @id @default(autoincrement())
  email        String       @unique
  password     String
  uuid         String
  paidUntil    DateTime?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  payments     Payment[]    // One-to-Many отношение с Payment
  promoUsages  PromoUsage[] // One-to-Many отношение с PromoUsage
}

model Payment {
  id         Int      @id @default(autoincrement())
  paymentId  String   @unique
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  amount     Float
  label      String
  status     String   @default("pending") // pending, completed, failed
  createdAt  DateTime @default(now())
}

model PromoCode {
  id          Int          @id @default(autoincrement())
  code        String       @unique
  description String?
  isActive    Boolean      @default(true)
  expiration  DateTime?
  maxUses     Int          // Максимальное количество использований
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  promoUsages PromoUsage[] // One-to-Many отношение с PromoUsage
}

model PromoUsage {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  promoCode   PromoCode @relation(fields: [promoCodeId], references: [id])
  promoCodeId Int
  usedAt      DateTime  @default(now())

  @@unique([userId, promoCodeId]) // Гарантирует однократное использование промокода каждым пользователем
}
